geom_tile(aes(va))
ggplot()+
geom_tile(aes(val))
val
ggplot()+
geom_tile(aes(val$Freq))
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))
ggplot()+
annotate(geom_tile(aes(val$sex,val$infected,fill=val$Freq)))
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
annotate()
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
annotate(geom_tile)
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
args(geom_tile)
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
args(geom_tile)()
args(geom_tile)
?geom_tile
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_color_continuous()
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_color_continuous(c(0:10))
?scale_color_continuous
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq),color="red")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq),fill="red")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq),
fill=c("red","blue"))
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq),
fill=c("red","blue","green","brown"))
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "white", high = "red")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "blue", high = "red")
table(sex,infected)
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "blue", high = "red")+
labs(x="Sex",y="Infection")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "blue", high = "red")+
labs(x="Sex",y="Infection")+
theme(legend.text = "Frequency")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "blue", high = "red")+
labs(x="Sex",y="Infection")+
theme(legend.text = c("Frequency"))
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "blue", high = "red")+
labs(x="Sex",y="Infection")+
theme(legend.title = "Freq")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "blue", high = "red")+
labs(x="Sex",y="Infection",fill = "Freq")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "blue", high = "red")+
labs(x="Sex",y="Infection",fill = "Frequency")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "black", high = "red")+
labs(x="Sex",y="Infection",fill = "Frequency")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "brown", high = "red")+
labs(x="Sex",y="Infection",fill = "Frequency")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "yellow", high = "red")+
labs(x="Sex",y="Infection",fill = "Frequency")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "green", high = "red")+
labs(x="Sex",y="Infection",fill = "Frequency")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "green", high = "red")+
labs(x="Sex",y="Infection",fill = "Frequency",
title="Infection by sex")
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "black", high = "white")+
labs(x="Sex",y="Infection",fill = "Frequency",
title="Infection by sex")
# Fit a maximal model
inf_mod1<-glm(infected~age*weight*sex,family=binomial)
summary(inf_mod1)
# Examine the model which just has main effects
inf_mod2<-glm(infected~age+weight+sex,binomial)
summary(inf_mod2)
ggplot()+
geom_tile(aes(val$sex,val$infected,fill=val$Freq))+
scale_fill_gradient(low = "black", high = "white")+
labs(x="Sex",y="Infection",fill = "Frequency",
title="Infection by sex")
# Fitting quadratic terms
inf_mod3<-glm(infected~age+weight+sex+I(weight^2)+I(age^2),
family=binomial)
summary(inf_mod3)
?I
## Spine plot and logistic regression
wasps<-read.table("Datasets/wasps.txt",header=T,
colClasses=list(fate="factor"))
head(wasps)
attach(wasps)
table(density,fate)
spineplot(fate~density,col=hue_pal()(2))
library(scales)
spineplot(fate~density,col=hue_pal()(2))
# Conditional density plot
cdplot(fate~density, col=hue_pal()(2))
cdplot(fate~log(density),col=hue_pal()(2))
# Quantifying the trend by logistic regression
wasps_mod1<-glm(fate~density,binomial)
wasps_mod2<-glm(fate~log(density),binomial)
summary(wasps_mod2)
# Quantifying the trend by logistic regression
wasps_mod1<-glm(fate~density,binomial);summary(wasps_mod1)
wasps_mod2<-glm(fate~log(density),binomial);summary(wasps_mod2)
# Quantifying the trend by logistic regression
wasps_mod1<-glm(fate~density,binomial);summary(wasps_mod1)
wasps_mod2<-glm(fate~log(density),binomial);summary(wasps_mod2)
# Quantifying the trend by logistic regression
wasps_mod1<-glm(fate~density,binomial);summary(wasps_mod1)
wasps_mod2<-glm(fate~log(density),binomial);summary(wasps_mod2)
anova(wasps_mod1,wasps_mod2,test="Chi")
anova(wasps_mod1,wasps_mod2,test="F")
anova(wasps_mod1,wasps_mod2,test="Chi")
pchisq(1.3187,0)
# Plotting the model
plot(jitter(log(density)), as.numeric(fate)-1,
col=hue_pal()(3)[1],xlim=c(0,5),ylab="jittered log(density)",
ylab="proportion parasitised")
# Plotting the model
plot(jitter(log(density)), as.numeric(fate)-1,
col=hue_pal()(3)[1],xlim=c(0,5),ylab="jittered log(density)",
ylab="proportion parasitised")
# Plotting the model
plot(jitter(log(density)), as.numeric(fate)-1,
col=hue_pal()(3)[1],xlim=c(0,5),xlab="jittered log(density)",
ylab="proportion parasitised")
# Plotting the model
plot(jitter(log(density)), as.numeric(fate)-1,
col=hue_pal()(3)[1],xlim=c(0,5),xlab="jittered log(density)",
ylab="proportion parasitised", pch=19)
xv<-seq(0,5,0.01)
yv<-1/(1+1/exp(coef(wasps_mod2)[1]+coef(wasps_mod2)[2]*xv))
lines(xv,yv,col=hue_pal()(3)[2])
den<-c(3.75,16,32,64)
pd<-c(3/15,5/16,20/32,52/64)
points(log(den),pd,cex=2,col=hue_pal()(4)[3])
points(log(den),pd,cex=2,col=hue_pal()(4)[3], pch=19)
eb<-sqrt(pd*(1-pd)/den)
lines(rep(log(den[i]),2),c(pd[i]-eb[i],pd[i]+eb[i]),
col=hue_pal()(4)[4])
for (i in 1:4){
lines(rep(log(den[i]),2),c(pd[i]-eb[i],pd[i]+eb[i]),
col=hue_pal()(4)[4])
}
library(ggplto2)
library(ggplot2)
install.packages(c("bslib", "data.table", "future.apply", "gh", "httpuv", "lme4", "RSQLite"))
ggplot()+
geom_point(log(density),fate)
ggplot()+
geom_point(aes(log(density),fate))
ggplot()+
geom_point(aes(log(density),fate))+
lims(x=c(0,5),y=c(0,1))
?lims
ggplot()+
geom_point(aes(log(density),fate))+
lims(log(density)==c(0,5),fate=c(0,1))
ggplot()+
geom_point(aes(log(density),fate))+
lims(log(density)=c(0,5),fate=c(0,1))
ggplot()+
geom_point(aes(log(density),fate))+
lims(density=c(0,5),fate=c(0,1))
ggplot()+
geom_point(aes(log(density),fate))+
xlim(0,5)+ylim(0,1)
ggplot(aes(log(density),fate))+
geom_point()+
xlim(0,5)+ylim(0,1)
ggplot(data=wasps,aes(log(density),fate))+
geom_point()+
xlim(0,5)+ylim(0,1)
ggplot()+
geom_point(aes(log(density),fate))+
xlim(0,5)+ylim(0,1)
ggplot()+
geom_point(aes(log(density),as.numeric(fate)))+
xlim(0,5)+ylim(0,1)
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1))+
xlim(0,5)+ylim(0,1)
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1))+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"))
aes(log(density),as.numeric(fate)-1)
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1))+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1))
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1))+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1))
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),jitter=T)+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1))
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),position = "Jitter")+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1))
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1))+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1))
plot(jitter(log(density)), as.numeric(fate)-1,
col=hue_pal()(3)[1],xlim=c(0,5),xlab="jittered log(density)",
ylab="proportion parasitised", pch=19) # Data points
xv<-seq(0,5,0.01) # Calculate Predicted line
yv<-1/(1+1/exp(coef(wasps_mod2)[1]+coef(wasps_mod2)[2]*xv))
lines(xv,yv,col=hue_pal()(3)[2]) # Prediction line
den<-c(3.75,16,32,64) #Plotting the residuals
pd<-c(3/15,5/16,20/32,52/64)
points(log(den),pd,cex=2,col=hue_pal()(4)[3], pch=19)
eb<-sqrt(pd*(1-pd)/den)
for (i in 1:4){
lines(rep(log(den[i]),2),c(pd[i]-eb[i],pd[i]+eb[i]),
col=hue_pal()(4)[4])
}
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1))+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1))
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1))+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1))+
geom_point(aes(log(den),pd),size=2,color=hue_pal()(4)[3])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[3])+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1))+
geom_point(aes(log(den),pd),size=2,color=hue_pal()(4)[3])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1])+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1))+
geom_point(aes(log(den),pd),size=2,color=hue_pal()(4)[3])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1])+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[1])+
geom_point(aes(log(den),pd),size=2,color=hue_pal()(4)[3])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1])+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=2,color=hue_pal()(4)[3])
?geom_errorbar
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1])+
xlim(0,5)+ylim(0,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=2,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb))
pd-eb
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1])+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=2,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb))
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=4)+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=2,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb))
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3)+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=2,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb))
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3)+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb))
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3)+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[3])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3)+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3, position = "jitter")+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3, position = "n")+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3, position = "star")+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3, position = "bubble")+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3, position = "hjitter")+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3, position = "hitter")+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3)+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3,position="jitter",width=T,height=F)+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
ggplot()+
geom_point(aes(log(density),as.numeric(fate)-1),color=hue_pal()(4)[1],
size=3)+
xlim(0,5)+ylim(-0.1,1)+
geom_smooth(method="glm",method.args=list(family="binomial"),
aes(log(density),as.numeric(fate)-1),
color=hue_pal()(4)[2])+
geom_point(aes(log(den),pd),size=5,color=hue_pal()(4)[3])+
geom_errorbar(aes(log(den),ymin=pd-eb,ymax=pd+eb),
color=hue_pal()(4)[4])
density
fate
table(fate)
tappy(fate,density,count)
tapply(fate,density,count)
tapply(fate,density,sum)
tapply(as.numeric(fate)-1,density,sum)
## Bootstrapping a GLM
timeber<-read.table("Datasets/timer.txt",header=T)
## Bootstrapping a GLM
timeber<-read.table("Datasets/timber.txt",header=T)
head(timber)
## Bootstrapping a GLM
timber<-read.table("Datasets/timber.txt",header=T)
head(timber)
detach(wasps)
attach(timber)
timber_model<-glm(log(volume)~log(girth)+log(height))
summary(timber_model)
install.packages("boot")
# install.packages("boot")
library(boot)
model.boot1<-function(data,indiced){
sub.data<-data[indices,]
model<-glm(log(volumn)~log(girth)+log(height))
coef(model)
}
timber.boot<-boot(timber,model.boot1,R=2000)
model.boot1<-function(data,indices){
sub.data<-data[indices,]
model<-glm(log(volumn)~log(girth)+log(height))
coef(model)
}
timber.boot<-boot(timber,model.boot1,R=2000)
model<-glm(log(volume)~log(girth)+log(height))
coef(model)
model.boot1<-function(data,indices){
sub.data<-data[indices,]
model<-glm(log(volume)~log(girth)+log(height))
coef(model)
}
timber.boot<-boot(timber,model.boot1,R=2000)
timber.boot
yhat<-fitted(timber_model)
resids<-resid(timber_model)
res_data<-data.frame(resids,girth,height)
coef(model)
model.boot2<-function(res_data,i){
y<-yhat+res_data[i,1]
nd<-data.frame(y,girth,height)
model<-glm(y~log(girth)+log(height))
coef(model)
}
perms<-boot(res_data,model.boot2,R=2000,sim="permutation")
perms
boot.ci(perms,index=1,conf=0.99)$bca[c(1,4,5)]
boot.ci(perms,index=2,conf=0.99)$bca[c(1,4,5)]
boot.ci(perms,index=3,conf=0.99)$bca[c(1,4,5)]
